{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import {createServer, request} from 'http';\nimport {request as requestHttps} from 'https';\nimport {parse} from 'url';\n\ncreateServer(handler).listen(80);\n\nconst DB_URL = parse(process.env.REPLIT_DB_URL!);\n\nif (DB_URL.protocol !== 'http:' && DB_URL.protocol !== 'https:') {\n  throw new Error('Unknown DB URL protocol: ' +DB_URL.protocol);\n}\n\nfunction handler(client_req, client_res) {\n  console.log('serve: ' + client_req.url);\n\n  console.log(client_req.headers)\n\n  var options = {\n    hostname: DB_URL.host,\n    port: DB_URL.port,\n    path: DB_URL.pathname + client_req.url.replace(/\\.+/g, '.'),\n    method: client_req.method,\n    // headers: client_req.headers,\n  };\n \n  const reqFn = DB_URL.protocol === 'https:'?requestHttps:request;\n\n  var proxy = reqFn(options, function (res) {\n    client_res.writeHead(res.statusCode, res.headers)\n    res.pipe(client_res, {\n      end: true\n    });\n  });\n\n  client_req.pipe(proxy, {\n    end: true\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,kBAAoC;AACpC,mBAAsC;AACtC,iBAAoB;AAEpB,8BAAa,SAAS,OAAO;AAE7B,MAAM,SAAS,sBAAM,QAAQ,IAAI;AAEjC,IAAI,OAAO,aAAa,WAAW,OAAO,aAAa,UAAU;AAC/D,QAAM,IAAI,MAAM,8BAA6B,OAAO;AAAA;AAGtD,iBAAiB,YAAY,YAAY;AACvC,UAAQ,IAAI,YAAY,WAAW;AAEnC,UAAQ,IAAI,WAAW;AAEvB,MAAI,UAAU;AAAA,IACZ,UAAU,OAAO;AAAA,IACjB,MAAM,OAAO;AAAA,IACb,MAAM,OAAO,WAAW,WAAW,IAAI,QAAQ,QAAQ;AAAA,IACvD,QAAQ,WAAW;AAAA;AAIrB,QAAM,QAAQ,OAAO,aAAa,WAAS,uBAAa;AAExD,MAAI,QAAQ,MAAM,SAAS,SAAU,KAAK;AACxC,eAAW,UAAU,IAAI,YAAY,IAAI;AACzC,QAAI,KAAK,YAAY;AAAA,MACnB,KAAK;AAAA;AAAA;AAIT,aAAW,KAAK,OAAO;AAAA,IACrB,KAAK;AAAA;AAAA;",
  "names": []
}
